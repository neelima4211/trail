to verify in command prompt run  git  

git is a version control software which allows u to save the code in diff version and branches in repositary
configure git  so that the work u do is kept under these credentials
git config --global user.name username
git config --global user.name email_id

//should the usernmae and emial here be the same as we enterded in github account creation
to check the user.name/user.email
git config user.name 

to create project folder with git repository
git init projectname_name
this line will initalize empty git repository inthat folder

if folder already exists the same command will take u to that file or u can just run git init when u r in the folder command

(staging environment) asking git to track files so that we can maintain multiple versions
git add file_name
git add .  //will add all the files will be added
we should not add node_modules and .env for that we have to add them in .gitignore file
/.env ,/node_modules


git status will show files tracked/untracked ,commits

remove file from staging or unstage
git rm --cached file_name


save version  after every change so that it gets updated
commit can be done only on stagged files as we will be having diff commits only those files we need in that commit will be stagged and then commited
git commit -m 'msg u want in log'
by this files are saved to local repository

git log will display all changes or commits
git log --oneline will display all changes or commits in one line


switch btw commits
git checkout commithascode(5,6 chacters of the commit is enough) (u get this by running git log)


to get lost commits
get reflog 


to save the version from local repository to cloud repository 
so that everyone who has ur permission can access it 
github is such a cloud based code hosting for version control and collabiration
git is to maintain diff versions locally
//we should have a account in github

add remote repo to origin
git remote add origin url u get after creating a repository

to know the origin(url of cloud repo) u have added previously git remote -v

to move local repo to cloud(to it only when working tree is error free)
git push -u origin